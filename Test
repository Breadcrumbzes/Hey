local noob = game:GetObjects("rbxassetid://14810660479")[1]
noob.Parent = workspace
noob:PivotTo(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
game.Players.LocalPlayer.Character.Parent = workspace
coroutine.wrap(function()
    local function waitForChild(parent, childName)
        local child = parent:FindFirstChild(childName)
        if child then return child end
        while true do
            local newChild = parent.ChildAdded:Wait()
            if newChild.Name == childName then return newChild end
        end
    end

    local Figure = noob
    local Humanoid = waitForChild(Figure, "Humanoid")
    local pose = "Standing"

    local currentAnim = ""
    local currentAnimInstance = nil
    local currentAnimTrack = nil
    local currentAnimKeyframeHandler = nil
    local currentAnimSpeed = 1.0
    local animTable = {}
    local animNames = { 
        idle = { { id = "http://www.roblox.com/asset/?id=507766666", weight = 1 },
                 { id = "http://www.roblox.com/asset/?id=507766951", weight = 1 },
                 { id = "http://www.roblox.com/asset/?id=507766388", weight = 9 } },
        walk = { { id = "http://www.roblox.com/asset/?id=507777826", weight = 10 } },
        run = { { id = "http://www.roblox.com/asset/?id=507767714", weight = 10 } },
        swim = { { id = "http://www.roblox.com/asset/?id=507784897", weight = 10 } },
        swimidle = { { id = "http://www.roblox.com/asset/?id=507785072", weight = 10 } },
        jump = { { id = "http://www.roblox.com/asset/?id=507765000", weight = 10 } },
        fall = { { id = "http://www.roblox.com/asset/?id=507767968", weight = 10 } },
        climb = { { id = "http://www.roblox.com/asset/?id=507765644", weight = 10 } },
        sit = { { id = "http://www.roblox.com/asset/?id=507768133", weight = 10 } },
        toolnone = { { id = "http://www.roblox.com/asset/?id=507768375", weight = 10 } },
        toolslash = { { id = "http://www.roblox.com/asset/?id=507768375", weight = 10 } },
        toollunge = { { id = "http://www.roblox.com/asset/?id=507768375", weight = 10 } },
        wave = { { id = "http://www.roblox.com/asset/?id=507770239", weight = 10 } },
        point = { { id = "http://www.roblox.com/asset/?id=507770453", weight = 10 } },
        dance = { { id = "http://www.roblox.com/asset/?id=507771019", weight = 10 },
                  { id = "http://www.roblox.com/asset/?id=507771955", weight = 10 },
                  { id = "http://www.roblox.com/asset/?id=507772104", weight = 10 } },
        dance2 = { { id = "http://www.roblox.com/asset/?id=507776043", weight = 10 },
                   { id = "http://www.roblox.com/asset/?id=507776720", weight = 10 },
                   { id = "http://www.roblox.com/asset/?id=507776879", weight = 10 } },
        dance3 = { { id = "http://www.roblox.com/asset/?id=507777268", weight = 10 },
                   { id = "http://www.roblox.com/asset/?id=507777451", weight = 10 },
                   { id = "http://www.roblox.com/asset/?id=507777623", weight = 10 } },
        laugh = { { id = "http://www.roblox.com/asset/?id=507770818", weight = 10 } },
        cheer = { { id = "http://www.roblox.com/asset/?id=507770677", weight = 10 } }
    }

    local emoteNames = { wave = false, point = false, dance = true, dance2 = true, dance3 = true, laugh = false, cheer = false }

    math.randomseed(tick())

    function configureAnimationSet(name, fileList)
        animTable[name] = { count = 0, totalWeight = 0, connections = {} }
        local config = script:FindFirstChild(name)
        if config then
            table.insert(animTable[name].connections, config.ChildAdded:Connect(function() configureAnimationSet(name, fileList) end))
            table.insert(animTable[name].connections, config.ChildRemoved:Connect(function() configureAnimationSet(name, fileList) end))
            for _, childPart in pairs(config:GetChildren()) do
                if childPart:IsA("Animation") then
                    table.insert(animTable[name].connections, childPart.Changed:Connect(function() configureAnimationSet(name, fileList) end))
                    table.insert(animTable[name], { anim = childPart, weight = childPart:FindFirstChild("Weight") and childPart.Weight.Value or 1 })
                    animTable[name].count = animTable[name].count + 1
                    animTable[name].totalWeight = animTable[name].totalWeight + (childPart:FindFirstChild("Weight") and childPart.Weight.Value or 1)
                end
            end
        end
        if animTable[name].count == 0 then
            for idx, anim in pairs(fileList) do
                local animInstance = Instance.new("Animation")
                animInstance.Name = name
                animInstance.AnimationId = anim.id
                table.insert(animTable[name], { anim = animInstance, weight = anim.weight })
                animTable[name].count = animTable[name].count + 1
                animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
            end
        end
    end

    function playAnimation(animName, transitionTime, humanoid)
        local roll = math.random(1, animTable[animName].totalWeight)
        local idx = 1
        while roll > animTable[animName][idx].weight do
            roll = roll - animTable[animName][idx].weight
            idx = idx + 1
        end
        local anim = animTable[animName][idx].anim
        if anim ~= currentAnimInstance then
            if currentAnimTrack then
                currentAnimTrack:Stop(transitionTime)
                currentAnimTrack:Destroy()
            end
            currentAnimTrack = humanoid:LoadAnimation(anim)
            currentAnimTrack:Play(transitionTime)
            currentAnim = animName
            currentAnimInstance = anim
            if currentAnimKeyframeHandler then
                currentAnimKeyframeHandler:Disconnect()
            end
            currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:Connect(function(frameName)
                if frameName == "End" then
                    local repeatAnim = currentAnim
                    if emoteNames[repeatAnim] ~= nil and not emoteNames[repeatAnim] then
                        repeatAnim = "idle"
                    end
                    playAnimation(repeatAnim, 0.15, humanoid)
                    setAnimationSpeed(currentAnimSpeed)
                end
            end)
        end
    end

    function setAnimationSpeed(speed)
        if currentAnimTrack and speed ~= currentAnimSpeed then
            currentAnimSpeed = speed
            currentAnimTrack:AdjustSpeed(speed)
        end
    end

    -- Initialization
    for name, fileList in pairs(animNames) do
        configureAnimationSet(name, fileList)
    end

    -- Events
    Humanoid.Running:Connect(function(speed)
        if speed > 0.01 then
            playAnimation("walk", 0.1, Humanoid)
            setAnimationSpeed(speed / 15.0)
            pose = "Running"
        else
            playAnimation("idle", 0.1, Humanoid)
            pose = "Standing"
        end
    end)

    Humanoid.Jumping:Connect(function()
        playAnimation("jump", 0.1, Humanoid)
        pose = "Jumping"
    end)

    Humanoid.Climbing:Connect(function(speed)
        playAnimation("climb", 0.1, Humanoid)
        setAnimationSpeed(speed / 5.0)
        pose = "Climbing"
    end)

    Humanoid.FreeFalling:Connect(function()
        playAnimation("fall", 0.2, Humanoid)
        pose = "FreeFall"
    end)

    Humanoid.Seated:Connect(function()
        playAnimation("sit", 0.5, Humanoid)
        pose = "Seated"
    end)

    Humanoid.Died:Connect(function()
        pose = "Dead"
    end)
end)()
